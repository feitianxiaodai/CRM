//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crm.EntityMapping
{
    using Model;
    using Model.ModelViews;
    using AutoMapper;

    public static class ModelExtHelper
    {
        #region 1.0 负责将model转换成modelview
        /// <summary>
        /// 用于将model转换成modelview
        /// </summary>
        /// <typeparam name="TModel"></typeparam>
        /// <typeparam name="TModelView"></typeparam>
        /// <param name="model"></param>
        /// <returns></returns>
        public static TModelView EntityMapModel<TModel, TModelView>(this TModel model)
        {
            //1.0 将转换的两个实体类型在Mapper中做一次映射，注意，此实体中的导航属性也必须映射
            ModelToModelView();

            //2.0 注意，这种写法要求sysKeyValue和sysKeyValue的属性名称成相同
            return Mapper.Map<TModel, TModelView>(model);
        }


        private static void ModelToModelView()
        {
            Mapper.CreateMap<sysFunction, sysFunctionView>();
            Mapper.CreateMap<sysKeyValue, sysKeyValueView>();
            Mapper.CreateMap<sysMenus, sysMenusView>();
            Mapper.CreateMap<sysOrganStruct, sysOrganStructView>();
            Mapper.CreateMap<sysPermissList, sysPermissListView>();
            Mapper.CreateMap<sysRole, sysRoleView>();
            Mapper.CreateMap<sysUserInfo, sysUserInfoView>();
            Mapper.CreateMap<sysUserInfo_Role, sysUserInfo_RoleView>();
            Mapper.CreateMap<wfProcess, wfProcessView>();
            Mapper.CreateMap<wfRequestForm, wfRequestFormView>();
            Mapper.CreateMap<wfWork, wfWorkView>();
            Mapper.CreateMap<wfWorkBranch, wfWorkBranchView>();
            Mapper.CreateMap<wfWorkNodes, wfWorkNodesView>();
        }
        #endregion

        #region 2.0 负责将modelView转换成model
        private static void ModelViewToModel()
        {
            Mapper.CreateMap<sysFunctionView, sysFunction>();
            Mapper.CreateMap<sysKeyValueView, sysKeyValue>();
            Mapper.CreateMap<sysMenusView, sysMenus>();
            Mapper.CreateMap<sysOrganStructView, sysOrganStruct>();
            Mapper.CreateMap<sysPermissListView, sysPermissList>();
            Mapper.CreateMap<sysRoleView, sysRole>();
            Mapper.CreateMap<sysUserInfoView, sysUserInfo>();
            Mapper.CreateMap<sysUserInfo_RoleView, sysUserInfo_Role>();
            Mapper.CreateMap<wfProcessView, wfProcess>();
            Mapper.CreateMap<wfRequestFormView, wfRequestForm>();
            Mapper.CreateMap<wfWorkView, wfWork>();
            Mapper.CreateMap<wfWorkBranchView, wfWorkBranch>();
            Mapper.CreateMap<wfWorkNodesView, wfWorkNodes>();
        }



        /// <summary>
        ///  用于将modelview转换成 model
        /// </summary>
        /// <typeparam name="TModelView"></typeparam>
        /// <typeparam name="TModel"></typeparam>
        /// <param name="model"></param>
        /// <returns></returns>
        public static TModel EntityMapModelView<TModelView, TModel>(this TModelView model)
        {
            //1.0 将转换的两个实体类型在Mapper中做一次映射，注意，此实体中的导航属性也必须映射
            ModelViewToModel();

            //2.0 注意，这种写法要求sysKeyValue和sysKeyValue的属性名称成相同
            return Mapper.Map<TModelView, TModel>(model);
        }
        #endregion
    }
}
